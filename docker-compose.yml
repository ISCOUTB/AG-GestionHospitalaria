services:
  db:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    env_file:
      - path: .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - '7001:5432'
    networks:
      - ag
  
  pgadmin:
    image: dpage/pgadmin4:latest
    depends_on:
      - db
    restart: unless-stopped
    env_file:
      - path: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL?Variable not set}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD?Variable not set}
    ports:
      - 5050:80
    networks:
      - ag

  mongo:
    image: mongo:7.0
    restart: unless-stopped
    ports:
      - 27018:27017
    volumes:
      - mongo_data:/data/db
    env_file:
      - path: .env
    environment:
      - MONGODATA=/data/db
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME?Variable not set}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD?Variable not set}
    networks:
      - ag

  prestart:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:latest'
    build:
      context: ./backend
    depends_on:
      - db
      - mongo
    command: bash scripts/prestart.sh
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME?Variable not set}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD?Variable not set}
      - MONGO_DB=${MONGO_DB}
      - MONGO_HOST=mongo
      - MONGO_PORT=${MONGO_PORT}
    networks:
      - ag

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:latest'
    restart: always
    depends_on:
      - db
      - mongo
      - prestart
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - FRONTEND_HOST=${FRONTEND_HOST?Variable not set}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME?Variable not set}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD?Variable not set}
      - MONGO_DB=${MONGO_DB}
      - MONGO_HOST=mongo
      - MONGO_PORT=${MONGO_PORT}
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8001:8001
    volumes:
      - ./backend:/backend
    networks:
      - ag

networks:
  ag:
    external: true

volumes:
  mongo_data:
  postgres_data:
